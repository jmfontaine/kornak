<?xml version="1.0"?>
<!--
 Kornak
 Copyright (c) 2007-2010, Jean-Marc Fontaine <jm@jmfontaine.net>.

 License :

 This source file is subject to the new BSD license that is bundled
 with this package in the file LICENSE.txt.
 
 Requirements:
 
 - PHP 5.1.4
 - Phing 2.3.0
 - PHPDocumentor 1.3.1
 - VersionControl_SVN 0.3
 - PHPUnit 3.0.0

 Usage:

    phing [<options>] [<targets>]

 Options:

    -D<property>=<value>
        Override a property defined in the build.properties file.
 
 Targets:

    build
        Build sources, all documentations and create archives.
        
    build.sources
        Build sources.
        
    build.docs
        Build all the documentations.
        
    build.docs.api
        Build only the API documentation
    
    run.tests
        Run unit tests.
        
    run.checkstyle
        Run checkstyle to check code for coding standard violations.
        
    clean.all
        Clean everything.
        
    clean.build
        Clean the build folder.
        
    clean.sources
        Clean the sources.
        
    clean.docs
        Clean all the documentations.
        
    clean.docs.api
        Clean only the API documentation.
-->
<project name="Kornak" default="build" basedir=".">
    <property file="${application.startdir}/build.properties" />

    <!-- Build everything --> 
    <target name="build" description="" depends="clean.build, build.sources, build.docs, run.tests">
        <echo message="Creating archives..." />
        <tar destfile="${build.tarball}.gzip" basedir="${build.path.bin}" compression="gzip" />
        <zip destfile="${build.zipball}" basedir="${build.path}" />
    </target>

    <!-- Build sources -->
    <target name="build.sources" description="" depends="clean.sources">
        <echo msg="Exporting sources..." />
        <svnexport svnpath="svn" repositoryurl="${project.svn.url}" todir="${build.path.bin}" />
        <delete dir="${build.path.bin}/dev-tools" failonerror="true" />
    </target>

    <!-- Build all documentations -->
    <target name="build.docs" depends="build.docs.api"
        description="Build both docbook manual and phpdoc API documentation." />
    
    <!-- Build API documentation -->
    <target name="build.docs.api" depends="clean.docs.api">
        <mkdir dir="${docs.api.path.dest}" />
        <phpdoc title="${docs.api.title}"
            destdir="${docs.api.path.dest}"
            output="${docs.api.style}"
            quiet="true">
            <fileset dir="${docs.api.path.src}">
                <include name="**/*.php" />
            </fileset>
        </phpdoc>
    </target>
    
    <!-- Run tests --> 
    <target name="run.tests" description="Run tests">
        <echo msg="Running tests..." />
        <phpunit2 haltonfailure="true">
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="${tests.path}">
                    <include name="**/*Test.php"/>
                </fileset>
            </batchtest>
        </phpunit2>
    </target>

    <!-- Run checkstyle --> 
    <target name="run.checkstyle" description="Run checkstyle">
        <echo msg="Running checkstyle..." />
        <PhpCodeSniffer showWarnings="false" standard="Zend">
            <fileset dir="${build.path.bin}/library">
                <include name="**/*"/>
            </fileset>
        </PhpCodeSniffer>
    </target>

    <!-- Clean everything --> 
    <target name="clean.all" depends="clean.sources, clean.docs, clean.build" description="Clean out everything" />

    <!-- Clean build directory --> 
    <target name="clean.build" description="Clean out build directory">
        <echo msg="Cleaning out build directory..." />
        <delete failonerror="true">
            <fileset dir="${build.path}">
                <include name="*" />
            </fileset>
        </delete>
    </target>

    <!-- Clean sources --> 
    <target name="clean.sources" description="Clean out sources">
        <echo msg="Cleaning out sources..." />
        <delete dir="${build.path.bin}" failonerror="false" />
    </target>

    <!-- Clean documentations --> 
    <target name="clean.docs" depends="clean.docs.api" description="Clean out documentations" />

    <!-- Clean API documentation --> 
    <target name="clean.docs.api" description="Clean out API documentation">
        <delete dir="${docs.api.path.dest}" failonerror="false" />
    </target>

</project>
